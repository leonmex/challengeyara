#version: "3.8"
services:
   webapp:
     container_name: webapp
     build:
       context: .
       target: webapp
     environment:
       - NGINX_HOST=webapp
       - NGINX_PORT=3000
     ports:
       - 9229:9229
     restart: unless-stopped
     volumes:
       - ./:/usr/src/app
       - /usr/src/app/node_modules
     networks:
       - node_network

   proxy:
     container_name: proxy
     restart: unless-stopped
     image: nginx
     ports:
       - 80:${NGINX_PORT}
     depends_on:
       - webapp
     volumes:
       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
     networks:
       - node_network

   postgres:
     image: postgres:latest
     ports:
       - 5432:5432
     restart: unless-stopped
     volumes:
       - postgres-data:/var/lib/postgres:rw
     container_name: postgres
     environment:
       - POSTGRES_USER=${POSTGRES_USER}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
       - POSTGRES_DB=${POSTGRES_DB}
     networks:
       - node_network

   elasticsearch:
     image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
     container_name: elasticsearch
     environment:
       - discovery.type=single-node
       - xpack.security.enabled=false
       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
     volumes:
       - elasticsearch-data:/usr/share/elasticsearch/data
     ports:
       - "9200:9200"
       - "9300:9300"
     networks:
       - node_network
     restart: unless-stopped

   graphql:
     container_name: graphql
     restart: always
     image: graphql
     build:
       context: .
       target: graphql
     env_file:
       - ./.env
     environment:
       - NGINX_HOST=webapp
       - NGINX_PORT=3000
     depends_on:
       - postgres
     networks:
       - node_network
     volumes:
       - ./graphql:/usr/src/app
       - /usr/src/app/node_modules
     ports:
       - 5433:3000
     command:
       [
         "--connection",
         "${DATABASE_URL}",
         "--port",
         "5433",
         "--schema",
         "public",
         "--append-plugins",
         "postgraphile-plugin-connection-filter,custom-plugin",
       ]

#  typescript:
#    container_name: typescript
#    restart: always
#    image: typescript
#    build:
#      context: .
#      target: typescript
#    env_file:
#      - ./.env
#    environment:
#      - NGINX_HOST=webapp
#      - NGINX_PORT=3000
#    # depends_on:
#    #   - postgres
#    networks:
#      - node_network
#    volumes:
#      - ./typescript:/usr/src/app
#    ports:
#      - 5434:3000
#
networks:
  node_network:

volumes:
  postgres-data:
  elasticsearch-data: